<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <changeSet id="000000000000-1" author="amaire">
        <sql>
            -- MySQL Script generated by MySQL Workbench
            -- ven. 24 mai 2024 19:41:42
            -- Model: New Model    Version: 1.0
            -- MySQL Workbench Forward Engineering

            SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
            SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
            SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

            -- -----------------------------------------------------
            -- Schema budgetdb
            -- -----------------------------------------------------

            -- -----------------------------------------------------
            -- Schema budgetdb
            -- -----------------------------------------------------
            CREATE SCHEMA IF NOT EXISTS `budgetdb` ;
            USE `budgetdb` ;

            -- -----------------------------------------------------
            -- Table `budgetdb`.`user_preference`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`user_preference` (
                                                                        `id` INT NOT NULL,
                                                                        `theme` VARCHAR(10) NOT NULL DEFAULT 'LIGHT',
                `period_type` VARCHAR(10) NOT NULL DEFAULT 'MONTHLY',
                `edit_warn` TINYINT NOT NULL DEFAULT 0,
                PRIMARY KEY (`id`))
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`user`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`user` (
                                                             `id` INT NOT NULL,
                                                             `email` VARCHAR(45) NOT NULL,
                `username` VARCHAR(45) NOT NULL,
                `password` VARCHAR(45) NOT NULL,
                `created_at` DATETIME NOT NULL,
                `updated_at` DATETIME NOT NULL,
                `user_preference_id` INT NOT NULL,
                PRIMARY KEY (`id`, `user_preference_id`),
                INDEX `fk_user_user_preference1_idx` (`user_preference_id` ASC) VISIBLE,
                CONSTRAINT `fk_user_user_preference1`
                FOREIGN KEY (`user_preference_id`)
                REFERENCES `budgetdb`.`user_preference` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`expense`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`expense` (
                                                                `id` INT NOT NULL,
                                                                `name` VARCHAR(45) NOT NULL,
                `amount` VARCHAR(45) NOT NULL,
                `date` DATE NOT NULL,
                `user_id` INT NOT NULL,
                `user_user_preference_id` INT NOT NULL,
                PRIMARY KEY (`id`, `user_id`, `user_user_preference_id`),
                INDEX `fk_expense_user1_idx` (`user_id` ASC, `user_user_preference_id` ASC) VISIBLE,
                CONSTRAINT `fk_expense_user1`
                FOREIGN KEY (`user_id` , `user_user_preference_id`)
                REFERENCES `budgetdb`.`user` (`id` , `user_preference_id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`category`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`category` (
                                                                 `id` INT NOT NULL,
                                                                 `name` VARCHAR(45) NOT NULL,
                `user_id` INT NOT NULL,
                PRIMARY KEY (`id`, `user_id`),
                INDEX `fk_expense_category_user1_idx` (`user_id` ASC) VISIBLE,
                CONSTRAINT `fk_expense_category_user1`
                FOREIGN KEY (`user_id`)
                REFERENCES `budgetdb`.`user` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`budget`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`budget` (
                                                               `id` INT NOT NULL,
                                                               `max_amount` VARCHAR(45) NOT NULL,
                `user_id` INT NOT NULL,
                `user_user_preference_id` INT NOT NULL,
                PRIMARY KEY (`id`, `user_id`, `user_user_preference_id`),
                INDEX `fk_budget_user1_idx` (`user_id` ASC, `user_user_preference_id` ASC) VISIBLE,
                CONSTRAINT `fk_budget_user1`
                FOREIGN KEY (`user_id` , `user_user_preference_id`)
                REFERENCES `budgetdb`.`user` (`id` , `user_preference_id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`budget_has_category`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`budget_has_category` (
                                                                            `budget_id` INT NOT NULL,
                                                                            `category_id` INT NOT NULL,
                                                                            PRIMARY KEY (`budget_id`, `category_id`),
                INDEX `fk_budget_has_expense_category_expense_category1_idx` (`category_id` ASC) VISIBLE,
                INDEX `fk_budget_has_expense_category_budget1_idx` (`budget_id` ASC) VISIBLE,
                CONSTRAINT `fk_budget_has_expense_category_budget1`
                FOREIGN KEY (`budget_id`)
                REFERENCES `budgetdb`.`budget` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION,
                CONSTRAINT `fk_budget_has_expense_category_expense_category1`
                FOREIGN KEY (`category_id`)
                REFERENCES `budgetdb`.`category` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`expense_has_category`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`expense_has_category` (
                                                                             `expense_id` INT NOT NULL,
                                                                             `category_id` INT NOT NULL,
                                                                             PRIMARY KEY (`expense_id`, `category_id`),
                INDEX `fk_expense_has_category_category1_idx` (`category_id` ASC) VISIBLE,
                INDEX `fk_expense_has_category_expense1_idx` (`expense_id` ASC) VISIBLE,
                CONSTRAINT `fk_expense_has_category_expense1`
                FOREIGN KEY (`expense_id`)
                REFERENCES `budgetdb`.`expense` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION,
                CONSTRAINT `fk_expense_has_category_category1`
                FOREIGN KEY (`category_id`)
                REFERENCES `budgetdb`.`category` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`income`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`income` (
                                                               `id` INT NOT NULL,
                                                               `name` VARCHAR(45) NOT NULL,
                `amount` VARCHAR(45) NOT NULL,
                `date` DATE NOT NULL,
                `user_id` INT NOT NULL,
                `user_user_preference_id` INT NOT NULL,
                PRIMARY KEY (`id`, `user_id`, `user_user_preference_id`),
                INDEX `fk_expense_user1_idx` (`user_id` ASC, `user_user_preference_id` ASC) VISIBLE,
                CONSTRAINT `fk_expense_user10`
                FOREIGN KEY (`user_id` , `user_user_preference_id`)
                REFERENCES `budgetdb`.`user` (`id` , `user_preference_id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;


            -- -----------------------------------------------------
            -- Table `budgetdb`.`income_has_category`
            -- -----------------------------------------------------
            CREATE TABLE IF NOT EXISTS `budgetdb`.`income_has_category` (
                                                                            `income_id` INT NOT NULL,
                                                                            `category_id` INT NOT NULL,
                                                                            PRIMARY KEY (`income_id`, `category_id`),
                INDEX `fk_income_has_category_category1_idx` (`category_id` ASC) VISIBLE,
                INDEX `fk_income_has_category_income1_idx` (`income_id` ASC) VISIBLE,
                CONSTRAINT `fk_income_has_category_income1`
                FOREIGN KEY (`income_id`)
                REFERENCES `budgetdb`.`income` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION,
                CONSTRAINT `fk_income_has_category_category1`
                FOREIGN KEY (`category_id`)
                REFERENCES `budgetdb`.`category` (`id`)
                ON DELETE NO ACTION
                ON UPDATE NO ACTION)
                ENGINE = InnoDB;

                USE `budgetdb`;

                DELIMITER $$
                USE `budgetdb`$$
                CREATE DEFINER = CURRENT_USER TRIGGER `budgetdb`.`expense_BEFORE_INSERT` BEFORE INSERT ON `expense` FOR EACH ROW
                            BEGIN
                    DECLARE category_count INT;
                    SET category_count = (SELECT COUNT(*) FROM expense_has_category WHERE expense_id = NEW.expense_id);
                    IF category_count = 0 THEN
                        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'An expense must be associated with at least one category';
                            END IF;
                END$$

                            USE `budgetdb`$$
                CREATE DEFINER = CURRENT_USER TRIGGER `budgetdb`.`budget_BEFORE_INSERT` BEFORE INSERT ON `budget` FOR EACH ROW
                            BEGIN
                    DECLARE category_count INT;
                    SET category_count = (SELECT COUNT(*) FROM budget_has_category WHERE budget_id = NEW.budget_id);
                    IF category_count = 0 THEN
                        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A budget must be associated with at least one category';
                            END IF;
                END$$

                            USE `budgetdb`$$
                CREATE DEFINER = CURRENT_USER TRIGGER `budgetdb`.`expense_BEFORE_INSERT` BEFORE INSERT ON `expense` FOR EACH ROW
                            BEGIN
                    DECLARE category_count INT;
                    SET category_count = (SELECT COUNT(*) FROM expense_has_category WHERE expense_id = NEW.expense_id);
                    IF category_count = 0 THEN
                        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'An expense must be associated with at least one category';
                            END IF;
                END$$

                            USE `budgetdb`$$
                CREATE DEFINER = CURRENT_USER TRIGGER `budgetdb`.`income_has_category_BEFORE_INSERT` BEFORE INSERT ON `income_has_category` FOR EACH ROW
                            BEGIN
                    DECLARE category_count INT;
                    SET category_count = (SELECT COUNT(*) FROM income_has_category WHERE income_id = NEW.income_id);
                    IF category_count = 0 THEN
                        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'An income must be associated with at least one category';
                            END IF;
                END$$


                            DELIMITER ;

                SET SQL_MODE=@OLD_SQL_MODE;
                SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
                SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


        </sql>
    </changeSet>

</databaseChangeLog>